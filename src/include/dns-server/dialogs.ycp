/**
 * File:	include/dns-server/dialogs.ycp
 * Package:	Configuration of dns-server
 * Summary:	Dialogs definitions
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 */

{

    textdomain "dns-server";

    import "DnsServer";

    import "Popup";
    import "Label";
    import "CWM";
    import "Wizard";
    import "Message";
    import "SuSEFirewall";
    import "Punycode";
    import "DnsServer";
    import "Confirm";

    /**
      * Ask user if exit without saving
      * @return boolean true if exit
      */
    global define boolean ReallyExit () ``{
	if (! DnsServer::WasModified ())
	    return true;
	// yes-no popup
	return Popup::YesNo (_("All changes will be lost.
Really exit?"));
    }

    /**
      * If modified, ask for confirmation
      * @return true if abort is confirmed
      */
    global define boolean ReallyAbort () ``{
	if (! DnsServer::WasModified ())
	    return true;
	return Popup::ReallyAbort (true);
    }

    /**
      * Ask for confirmation (always)
      * @return true if abort is confirmed
      */
    global define boolean ReallyAbortAlways () ``{
	return Popup::ReallyAbort (true);
    }

    /**
      * Read settings dialog
      * @return `abort if aborted and `next otherwise
      */
    global define symbol ReadDialog() ``{
	Wizard::RestoreHelp (HELPS["read"]:"");

	// checking for root permissions
	if (!Confirm::MustBeRoot())
	    return `abort;

	boolean ret = DnsServer::Read();
	return ret ? `next : `abort;
    }

    /**
      * Write settings dialog
      * @return `abort if aborted and `next otherwise
      */
    global define symbol WriteDialog() ``{
	Wizard::RestoreHelp (HELPS["write"]:"");
	boolean ret = DnsServer::Write();
	// yes-no popup
	if (! ret && Popup::YesNo (_("Saving the configuration failed. Change the settings?")))
	    return `back;
	return ret ? `next : `abort;
    }

define symbol runZoneTypeSwitch () ``{
    string type = current_zone["type"]:"master";
    string name = current_zone["zone"]:"unknown";
    y2milestone ("Editing zone %1 (%2), type %3", name, Punycode::DecodeDomainName(name), type);
    if (type == "master")
	return `master;
    else if (type == "slave")
	return `slave;
    else if (type == "stub")
	return `stub;
    else if (type == "forward")
	return `forward;
    else
    {
	// message popup
	Popup::Message (_("A zone of this type cannot be edited with this tool."));
	return `back;
    }
}

/* EOF */
}
