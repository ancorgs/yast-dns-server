/**
 * File:	include/dns-server/wizards.ycp
 * Package:	Configuration of dns-server
 * Summary:	Wizards definitions
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 */

{

    textdomain "dns-server";

    import "Wizard";

    include "ui/common_popups.ycp";
    include "ui/common_messages.ycp";
    include "wizard/sequencer.ycp";

    /**
      * Whole configuration of dns-server
      * @return sequence result
      */
    global define symbol DnsSequence() ``{

	map aliases = $[
	    "read"	: [ ``( ReadDialog() ), true ],
	    "main"	:   ``( MainSequence() ),
	    "write"	: [ ``( WriteDialog() ), true ]
	];

	map sequence = $[
	    "ws_start" : "read",
	    "read" : $[
		`abort	: `abort,
		`next	: "main"
	    ],
	    "main" : $[
		`abort	: `abort,
		`next	: "write"
	    ],
	    "write" : $[
		`abort	: `abort,
		`next	: `next
	    ]
	];

	string caption = _("DNS server configuration");
	term contents = `Label(_("Initializing ..."));

	Wizard::CreateDialog();
	Wizard::SetContentsButtons(caption, contents, "",
	    BackButtonLabel(), NextButtonLabel());

	any ret = WizardSequencer(aliases, sequence);

	UI::CloseDialog();
	return ret;
    }

    /**
      * Main workflow of the dns-server configuration
      * @return sequence result
      */
    global define symbol MainSequence() ``{

	map aliases = $[
	    "main"		: ``(runMainDialog ()),
	    "master_zone"	: ``(runMasterZoneDialog ()),
	];

	map sequence = $[
	    "ws_start" : "main",
	    "main" : $[
		`abort : `abort,
		`next : `next,
	    ],
	];

	any ret = WizardSequencer(aliases, sequence);

	return ret;
    }

/* EOF */
}
