/**
 * File:	include/dns-server/wizards.ycp
 * Package:	Configuration of dns-server
 * Summary:	Wizards definitions
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 */

{

    textdomain "dns-server";

    import "Wizard";

    import "Popup";
    import "Label";
    include "wizard/sequencer.ycp";

    /**
      * Main workflow of the dns-server configuration
      * @return sequence result
      */
    global define symbol MainSequence() ``{

	map aliases = $[
	    "main"		: ``(runMainDialog ()),
	    "zones"		: ``(runZonesDialog ()),
	    "master_zone"	: ``(runMasterZoneDialog ()),
	    "slave_zone"	: ``(runSlaveZoneDialog ()),
	];

	map sequence = $[
	    "ws_start" : "main",
	    "main" : $[
		`abort : `abort,
		`next : `next,
		`zones : "zones",
	    ],
	    "zones" : $[
		`abort : `abort,
		`next : "main",
		`edit_master : "master_zone",
		`edit_slave : "slave_zone",
	    ],
	    "master_zone" : $[
		`abort : `abort,
		`next : "zones",
		`again : "master_zone",
	    ],
	    "slave_zone" : $[
		`abort : `abort,
		`next : "zones",
		`again : "slave_zone",
	    ],
	];

	symbol ret = WizardSequencer(aliases, sequence);

	return ret;
    }

    /**
      * Whole configuration of dns-server
      * @return sequence result
      */
    global define symbol DnsSequence() ``{

	map aliases = $[
	    "read"	: [ ``( ReadDialog() ), true ],
	    "main"	:   ``( MainSequence() ),
	    "write"	: [ ``( WriteDialog() ), true ]
	];

	map sequence = $[
	    "ws_start" : "read",
	    "read" : $[
		`abort	: `abort,
		`next	: "main"
	    ],
	    "main" : $[
		`abort	: `abort,
		`next	: "write"
	    ],
	    "write" : $[
		`abort	: `abort,
		`next	: `next
	    ]
	];

	Wizard::CreateDialog();

	symbol ret = WizardSequencer(aliases, sequence);

	UI::CloseDialog();
	return ret;
    }

/* EOF */
}
