/**
 * File:	include/dns-server/dialogs.ycp
 * Package:	Configuration of dns-server
 * Summary:	Dialogs definitions
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 */

{

    textdomain "dns-server";

    import "DnsServer";

    import "Popup";
    import "Label";
    import "CWM";
    import "Wizard";

    /**
      * Read settings dialog
      * @return `abort if aborted and `next otherwise
      */
    global define symbol ReadDialog() ``{
	Wizard::RestoreHelp (HELPS["read"]:"");
	boolean ret = DnsServer::Read();
	return ret ? `next : `abort;
    }

    /**
      * Write settings dialog
      * @return `abort if aborted and `next otherwise
      */
    global define symbol WriteDialog() ``{
	Wizard::RestoreHelp (HELPS["write"]:"");
	boolean ret = DnsServer::Write();
	if (! ret && cfg_restart_wanted)
	    return `back;
	return ret ? `next : `abort;
    }

    /**
      * Run main dialog
      * @return symbol for wizard sequencer
      */
    global define symbol runMainDialog () ``{
	list w = CWM::CreateWidgets (["global_table", "log_button", ],
	    DnsServer::widgets);
	term contents = `HBox (`HSpacing (1), `VBox (
	    `VSpacing (1),
	    w[0, "widget"]:`VSpacing (0),
	    `VSpacing (1),
	    w[1, "widget"]:`VSpacing (0),
	    `VSpacing (1)
	), `HSpacing (1));
	// dialog caption
	string caption = _("DNS server configuration");
	string help = CWM::MergeHelps (w);

	Wizard::SetContentsButtons (caption, contents, help,
	    Label::BackButton (), Label::FinishButton ());

	return CWM::Run (w, $[]);
    }

    /**
      * Run list of zones dialog
      * @return symbol for wizard sequencer
      */
    global define symbol runZonesDialog () ``{
	list w = CWM::CreateWidgets (["zones"], DnsServer::widgets);
	term contents = `HBox (`HSpacing (1), `VBox (
	    `VSpacing (1),
	    w[0, "widget"]:`VSpacing (0),
	    `VSpacing (1)
	), `HSpacing (1));
	// dialog caption
	string caption = _("Host with fixed address configuration");
	string help = CWM::MergeHelps (w);

	Wizard::SetContentsButtons (caption, contents, help,
	    Label::BackButton (), Label::OKButton ());

	return CWM::Run (w, $[]);
    }

    /**
      * Run master zone edit dialog
      * @return symbol for wizard sequencer
      */
    global define symbol runMasterZoneDialog () ``{
	list w = CWM::CreateWidgets (["master_table"],
	    DnsServer::widgets);
	term contents = `HBox (`HSpacing (1), `VBox (
	    `VSpacing (1),
	    w[0, "widget"]:`VSpacing (0),
	    `VSpacing (1)
	), `HSpacing (1));
	// dialog caption
	string caption = _("DNS master zone configuration");
	string help = CWM::MergeHelps (w);

	Wizard::SetContentsButtons (caption, contents, help,
	    Label::BackButton (), Label::OKButton ());

	return CWM::Run (w, $[]);
    }

    /**
      * Run slave zone edit dialog
      * @return symbol for wizard sequencer
      */
    global define symbol runSlaveZoneDialog () ``{
	list w = CWM::CreateWidgets (["slave_table"],
	    DnsServer::widgets);
	term contents = `HBox (`HSpacing (1), `VBox (
	    `VSpacing (1),
	    w[0, "widget"]:`VSpacing (0),
	    `VSpacing (1)
	), `HSpacing (1));
	// dialog caption
	string caption = _("DNS slave zone configuration");
	string help = CWM::MergeHelps (w);

	Wizard::SetContentsButtons (caption, contents, help,
	    Label::BackButton (), Label::OKButton ());

	return CWM::Run (w, $[]);
    }

/* EOF */
}
